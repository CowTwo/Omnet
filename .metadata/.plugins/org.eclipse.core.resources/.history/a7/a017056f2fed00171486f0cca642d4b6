//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

#include "Txc.h"
#include "ieee802_11.h"
#include "gl_typedef.h"

namespace z_ct_sae {

Define_Module(Txc);

unsigned char g_rxFrame[]=
      {0xb0, 0x00, 0x00, 0x00, 0x10, 0x20, 0x30, 0x00,
       0x00, 0x00, 0x40, 0x50, 0x60, 0x00, 0x00, 0x00,
       0x10, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
       0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00,
       0x6c, 0x79, 0x35, 0x66, 0x69, 0x5b, 0xfd, 0x20,
       0x6e, 0x9a, 0x96, 0x83, 0xac, 0xe7, 0xe7, 0x1c,
       0x42, 0xfa, 0x63, 0xf4, 0x18, 0x66, 0x58, 0xa5,
       0x98, 0x87, 0x33, 0xf0, 0xef, 0xbe, 0x50, 0x25,
       0xbb, 0x17, 0x55, 0xe1, 0x74, 0xc7, 0xbd, 0x2d,
       0x2d, 0x38, 0xb2, 0xf2, 0x65, 0x66, 0x94, 0xa0,
       0x47, 0xf3, 0x96, 0x76, 0x1e, 0xa9, 0xe3, 0xfd,
       0x8d, 0xc5, 0x03, 0xf5, 0x70, 0x8f, 0x18, 0xc6,
       0x6c, 0x26, 0x0f, 0x8e, 0x2a, 0x8d, 0xa7, 0xb4,
       0x87, 0x5a, 0xaa, 0x64, 0xd6, 0xcc, 0xcc, 0x02,
       0xd9, 0x6f, 0xd5, 0xfa, 0x9a, 0x7f, 0x4e, 0x9e,
       0xee, 0x9a, 0x44, 0x82, 0xfb, 0xfd, 0x4e, 0xc1};
int g_len=sizeof(g_rxFrame);

void Txc::initialize()
{
    rSaeCtx.bnctx=NULL;
    if (env_init(&rSaeCtx)!=1){
        ASSERT(0);
    }

    if (par("sendInitialMessage").boolValue())
    {
        cMessage *msg = new cMessage("tictocMsg");

        //++
        {
            unsigned char l_myMac[ETH_ALEN]={0x40,0x50,0x60,0x00,0x00,0x00};
            unsigned char l_herMac[ETH_ALEN]={0x10,0x20,0x30,0x00,0x00,0x00};
            memcpy(rSaeCtx.myMac, l_myMac, ETH_ALEN);
            memcpy(rSaeCtx.herMac, l_herMac, ETH_ALEN);
            msg->setContextPointer(g_rxFrame);
            msg->setKind(g_len);
        }
        //--

        send(msg, "out");
    }
    else{
        //++
        {
            unsigned char l_myMac[ETH_ALEN]={0x10,0x20,0x30,0x00,0x00,0x00};
            unsigned char l_herMac[ETH_ALEN]={0x40,0x50,0x60,0x00,0x00,0x00};
            memcpy(rSaeCtx.myMac, l_myMac, ETH_ALEN);
            memcpy(rSaeCtx.herMac, l_herMac, ETH_ALEN);
        }
        //--

    }
}

void Txc::handleMessage(cMessage *msg)
{
    struct ieee80211_mgmt_frame *frame;
    int len;

    frame=(ieee80211_mgmt_frame *)msg->getContextPointer();
    len=(int)msg->getKind();

    process_mgmt_frame(&rSaeCtx, frame, len, rSaeCtx.myMac, (void*)0);

    // just send back the message we received
    //send(msg, "out");
}


}; // namespace
